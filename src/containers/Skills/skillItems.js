export const skillItems = [
    {
        title: 'HTML/CSS',
        items: [
            'Владение семантической разметкой для правильной структуры страниц.',

            'Использование современных тегов (header, main, section, article, footer).',

            'Работа с формами, таблицами, мультимедиа (видео, аудио).',

            // 'Оптимизация структуры для SEO и доступности (Accessibility).',

            'Стилизация интерфейсов с помощью Flexbox и Grid Layout.',

            'Адаптивная и кроссбраузерная верстка.',

            'Использование CSS-переменных, анимаций и переходов.',

            'Опыт работы с препроцессорами (Sass/SCSS) и фреймворками (TailwindCSS).',
        ],
        percent: '95',
    },
    {
        title: 'JavaScript',
        items: [
            'Владение основами: переменные, условия, циклы, функции, объекты, массивы',

            'Работа с DOM: изменение элементов, обработка событий',

            'Асинхронное программирование (Promise, async/await, fetch)',

            'Использование модулей ES6',

            // 'Работа с API (REST, JSON)',

            // 'Понимание принципов ООП и функционального программирования',

            'Основы jQuery',
        ],
        percent: '70',
    },
    {
        title: 'React.js (Практикую)',
        items: [
            'Основы React',

            'Создание интерактивных пользовательских интерфейсов с использованием компонентов и хуков (useState, useEffect)',

            'Работа с props и state для управления данными',

            'Построение SPA (Single Page Applications) с роутингом и динамическим контентом',

            // 'Оптимизация производительности с помощью React.memo, lazy loading, suspense',

            'Маршрутизация (React Router)',
        ],
        percent: '55',
    },
    {
        title: 'Next.js (Обучаюсь)',
        items: [
            'Работа с маршрутизацией (страницы, динамические и вложенные роуты)',

            // 'Рендеринг: понимание SSR (Server-Side Rendering), SSG (Static Site Generation) и CSR (Client-Side Rendering)',

            // 'Использование серверных и клиентских компонентов для оптимизации производительности',

            // 'API Routes — создание серверной логики прямо внутри приложения',

            // 'Интеграция с базами данных и API для работы с данными',

            'Стилизация с помощью CSS, SCSS, TailwindCSS или других библиотек',

            // 'Оптимизация изображений и шрифтов для скорости загрузки',

            // 'Деплой и настройка проекта (например, на Vercel, Docker)',

            'TypeScript для типизации и повышения надежности кода',

            // 'Аутентификация и авторизация (Auth.js, Better Auth и др.)',

            // 'SEO и метаданные для продвижения сайтов',
        ],
        percent: '25',
    },
    {
        title: 'TailwindCSS (Обучаюсь)',
        items: [
            'Быстрая и современная стилизация интерфейсов с помощью утилитарных классов',

            'Создание адаптивного дизайна без написания большого количества CSS',

            // 'Использование анимаций, темизации и кастомных стилей через Tailwind',

            'Опыт интеграции с React и Next.js',
        ],
        percent: '55',
    },
    {
        title: 'Vue.js (Обучаюсь)',
        items: [
            'Создание реактивных пользовательских интерфейсов с помощью компонентов',

            'Использование директив (v-if, v-for, v-model) для динамического отображения данных',

            'Работа с состоянием компонентов и управлением данными через props, data и events',

            'Понимание компьютед свойств (computed) и наблюдателей (watch) для оптимизации логики приложения',

            // 'Интеграция с внешними API и управление асинхронными запросами',

            // 'Использование Vue Router для организации маршрутизации SPA',

            // 'Работа с Vuex или Pinia для централизованного управления состоянием приложения',

            // 'Создание адаптивного и современного интерфейса с CSS, TailwindCSS или Vuetify',
        ],
        percent: '20',
    },
    {
        title: 'Git',
        items: [
            'Управление версиями кода: commit, push, pull, merge, branch',

            'Работа с удаленными репозиториями (GitHub, GitLab)',

            'Разрешение конфликтов и поддержка командной работы над проектами',

            // 'Использование ветвления и pull request для организации процесса разработки',
        ],
        percent: '35',
    },

    // {
    //     title: 'UX/UI',
    //     items: [
    //         'Дизайн визуальных элементов',

    //         'Работа с дизайн-инструментами',

    //         'Адаптивный дизайн',
    //     ],
    //     percent: '20',
    // },
]